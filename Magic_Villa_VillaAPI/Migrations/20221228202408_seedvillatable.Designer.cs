// <auto-generated />
using System;
using Magic_Villa_VillaAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MagicVillaVillaAPI.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20221228202408_seedvillatable")]
    partial class seedvillatable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Magic_Villa_VillaAPI.Models.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amenity")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<int>("Occupancy")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("Sqft")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amenity = "Testing amenity here!",
                            CreatedDate = new DateTime(2022, 12, 28, 15, 24, 8, 794, DateTimeKind.Local).AddTicks(1771),
                            Details = "Testing Details here for you!",
                            ImageUrl = "https://dotnetmasteryimages.blob.core.windows.net/bluevillaimages/villa3.jpg",
                            Name = "Test Valla 1",
                            Occupancy = 5,
                            Rate = 200.0,
                            Sqft = 1200,
                            UpdatedDate = new DateTime(2022, 12, 28, 15, 24, 8, 794, DateTimeKind.Local).AddTicks(1812)
                        },
                        new
                        {
                            Id = 2,
                            Amenity = "Testing amenity here!",
                            CreatedDate = new DateTime(2022, 12, 28, 15, 24, 8, 794, DateTimeKind.Local).AddTicks(1815),
                            Details = "Testing Details here for you!",
                            ImageUrl = "https://dotnetmasteryimages.blob.core.windows.net/bluevillaimages/villa4.jpg",
                            Name = "Test Valla 2",
                            Occupancy = 3,
                            Rate = 150.0,
                            Sqft = 1000,
                            UpdatedDate = new DateTime(2022, 12, 28, 15, 24, 8, 794, DateTimeKind.Local).AddTicks(1816)
                        },
                        new
                        {
                            Id = 3,
                            Amenity = "Testing amenity here!",
                            CreatedDate = new DateTime(2022, 12, 28, 15, 24, 8, 794, DateTimeKind.Local).AddTicks(1818),
                            Details = "Testing Details here for you!",
                            ImageUrl = "https://dotnetmasteryimages.blob.core.windows.net/bluevillaimages/villa5.jpg",
                            Name = "Test Valla 3",
                            Occupancy = 6,
                            Rate = 250.0,
                            Sqft = 1500,
                            UpdatedDate = new DateTime(2022, 12, 28, 15, 24, 8, 794, DateTimeKind.Local).AddTicks(1819)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
